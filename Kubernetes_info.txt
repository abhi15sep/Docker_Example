1. https://kubernetes.io/

2. kubernetes partners
https://kubernetes.io/partners/#conformance

3. kubernetes Components
https://kubernetes.io/docs/concepts/overview/components/#master-components

4. MiniKube download
https://github.com/kubernetes/minikube/releases/

5. Mikrok8s for Linux hosts
https://github.com/ubuntu/microk8s

6. Install KubeCtl on windows
https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-on-windows

7. kataconda kubernetes in a browser
https://www.katacoda.com/courses/kubernetes/playground

8. Play-with-K8s in browser
https://play-with-k8s.com/

9. Pod overview
https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/

10. Service (docs)
https://kubernetes.io/docs/concepts/services-networking/service/

11. Namespace (docs)
https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/

12. Some Sample Commands:
microk8s.kubectl version
microk8s.kubectl run mynginx --image nginx
microk8s.kubectl get pods
microk8s.kubectl get all
microk8s.kubectl delete deployment mynginx
microk8s.kubectl run my-apache --image httpd
microk8s.kubectl scale deploy/my-apache --replicas 2
microk8s.kubectl logs deploy/my-apache --follow --tail 1
microk8s.kubectl logs -l run=my-apache

microk8s.kubectl get pods
microk8s.kubectl describe pod/my-apache-5d589d69c7-6jjpt

microk8s.kubectl get pods -w
microk8s.kubectl delete pod/my-apache-5d589d69c7-6jjpt

13. kubectl cheat-sheet
https://kubernetes.io/docs/reference/kubectl/cheatsheet/

14. kubectl for docker users
https://kubernetes.io/docs/reference/kubectl/docker-cli-to-kubectl/

15. Stern: For better multi-node log view.
https://github.com/wercker/stern

16. Servive (docs)
https://kubernetes.io/docs/concepts/services-networking/service/

17. Service Types
https://kubernetes.io/docs/tutorials/services/

18. Using Services
https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/

19. Create service
microk8s.kubectl create deployment httpenv --image=bretfisher/httpenv
microk8s.kubectl scale deployment/httpenv --replicas=5
microk8s.kubectl expose deployment/httpenv --port 8888
microk8s.kubectl run --generator run-pod/v1 tmp-shell --rm -it --image bretfisher/netshoot -- bash
curl httpenv:8888 (Fow wwindows & MAC)
For Linux machine
microk8s.kubectl get service
curl [Ip of service]:8888

20. NodePort (docs)
https://kubernetes.io/docs/concepts/services-networking/service/#nodeport

21. kubernetes DNS Specification
https://github.com/kubernetes/dns/blob/master/docs/specification.md

22. Core DNS for kubernetes
https://www.coredns.io/plugins/kubernetes/

23. Lets expose a NodePort, so we can access it via host ip. (including localhost on win/Linux/MAC)
kubectl expose deployment/httpenv --port 8888 --name httpenv-np --type NodePort
curl localhost:31597
kubectl expose deployment/httpenv --port 8888 --name httpenv-lb --type LoadBalancer
curl localhost:8888
kubectl get services
To Clean-up everything
kubectl delete service/httpenv service/httpenv-np
kubectl delete service/httpenv-lb deployment/httpenv

24. To list all namespaces
kubectl get namespaces

25. kubectl Usage Conventions
https://kubernetes.io/docs/reference/kubectl/conventions/

26. Generator examples
microk8s.kubectl create deployment test --image nginx --dry-run -o yaml
microk8s.kubectl create job test --image nginx --dry-run -o yaml
microk8s.kubectl create deployment test --image nginx
microk8s.kubectl expose deployment/test --port 80 --dry-run -o yaml
microk8s.kubectl delete deployment test

27. KubeCtl Usage best practices
https://kubernetes.io/docs/reference/kubectl/conventions/#best-practices
kubectl run test --image nginx --port 80 --expose --dry-run
kubectl run test --image nginx --port 80 --restart OnFailure --dry-run
kubectl run test --image nginx --port 80 --restart Never --dry-run
kubectl run test --image nginx --port 80 --schedule "*/1 * * * *" --dry-run

28. kubernetes management techniques
https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/

29. Imperative command examples
https://kubernetes.io/docs/tasks/manage-kubernetes-objects/imperative-command/

30. Imperative config files
https://kubernetes.io/docs/tasks/manage-kubernetes-objects/imperative-config/

31. Declarative config files
https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/

32. Using KubeCtl apply
> Create update resources in a files
kubectl apply -f myfile.yaml
> Create/update a whole directory of yaml
kubectl apply -f myyaml/
> Create/Update from a URL
kubectl apply -f https://bret.run/prod.yaml
curl -L https://bret.run/prod

33. Understanding kubernetes object
https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/

34. To get all Kind available in yaml file use:
microk8s.kubectl api-resources

35. To get the apiVersions the cluster supports
microk8s.kubectl api-versions

36. kubernetes API reference
https://kubernetes.io/docs/reference/#api-reference

37. To get all the keys each kind supports
kubectl explain services --recursive
kubectl explain services.spec
kubectl explain services.spec.type
kubectl explain deployment.spec.template.spec.volumes.nfs.server